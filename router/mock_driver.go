// Code generated by mockery v1.0.0. DO NOT EDIT.

package router

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"

	types "github.com/pokt-foundation/relay-counter/types"
)

// MockDriver is an autogenerated mock type for the Driver type
type MockDriver struct {
	mock.Mock
}

// ReadRelayCounts provides a mock function with given fields: ctx, from, to
func (_m *MockDriver) ReadRelayCounts(ctx context.Context, from time.Time, to time.Time) ([]types.RelayCount, error) {
	ret := _m.Called(ctx, from, to)

	var r0 []types.RelayCount
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, time.Time) []types.RelayCount); ok {
		r0 = rf(ctx, from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.RelayCount)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, time.Time, time.Time) error); ok {
		r1 = rf(ctx, from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WriteRelayCount provides a mock function with given fields: ctx, count
func (_m *MockDriver) WriteRelayCount(ctx context.Context, count types.RelayCount) error {
	ret := _m.Called(ctx, count)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.RelayCount) error); ok {
		r0 = rf(ctx, count)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
